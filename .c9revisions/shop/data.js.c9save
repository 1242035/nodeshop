{"ts":1369162707045,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Require needed modules\nvar mongoose = require('mongoose');\nvar passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\n\n// Require data models\nvar User = require('../model/user');\nvar Product = require('../model/product');\nvar Category = require(\"../model/category\");\n\n// Passport methods\npassport.use(new LocalStrategy({usernameField: 'email'},function(email, password, done) {User.authenticate(email, password, function(err, user) {return done(err, user)})}));\npassport.serializeUser(function(user, done) {done(null, user.id)});\npassport.deserializeUser(function(id, done) {User.findById(id, function (err, user) {done(err, user)})});\n\n// Export functions\nmodule.exports = {\n\n    // Connect to database\n    startup: function(dbToUse) {\n        \n        // Connect mongoose and select db\n        mongoose.connect(dbToUse);\n        \n        // Add listener for opened connection\n        mongoose.connection.on('open', function() {\n            console.log('Connected to MongoDB!');\n        });\n    },\n\n    // Get featured products\n    getFeatured: function(callback) {\n        \n        // Find all products where featured is true\n        var query = Product.find({featured : true});\n        query.exec(function(err, featuredProducts) { \n            \n            // Execute callback passed from route\n            callback(null, featuredProducts);\n        });\n    },\n  \n    // Get products in requested category\n    getCategoryProducts: function(category, callback) {\n    \n        // Find category for given SEO url\n        var categoryQuery = Category.findOne({seo : category});\n        categoryQuery.exec(function(err, category){\n        \n            // Find products in given category\n            var productQuery = Product.find({category : category.name});\n            productQuery.exec(function(err, categoryProducts) {  \n                \n                // Execute callback passed from route\n                callback(null, categoryProducts, category.name);\n            });\n        });\n    },\n  \n    // Get categories for top navigation bar\n    getTopCategories: function(callback) {\n        var query = Category.find({topnav : true});\n        query.exec(function(err, categories) { \n            \n            // Execute callback passed from route\n            callback(null, categories);\n        });\n    },\n  \n    // Find product for given SEO url\n    findProductBySEO: function(seo, callback) {\n        var query = Product.findOne({seo : seo});\n        query.exec(function(err, product) {  \n            \n            // Execute callback passed from route\n            callback(null, product);\n        });\n    },\n  \n    // Find product for given ID\n    findProductByID: function(id, callback) {\n        \n        // Find product where _id matches given ID\n        var query = Product.findOne({_id : id});\n        query.exec(function(err, product) {  \n            \n            // Execute callback passed from route\n            callback(null, product);\n        });\n    },\n\n    // Save new user\n    saveUser: function(userInfo, callback) {\n        \n        // Build user object\n        var newUser = new User ({\n            name : { first: userInfo.fname, last: userInfo.lname },\n            email: userInfo.email,\n            password: userInfo.password\n        });\n    \n        // Save into database\n        newUser.save(function(err) {\n            if (err) {throw err;}\n            \n            // Execute callback passed from route\n            callback(null, userInfo);\n        });\n    },\n\n    // Close DB connection\n    closeDB: function() {\n        mongoose.disconnect();\n    }\n};"]],"start1":0,"start2":0,"length1":0,"length2":3616}]],"length":3616}
{"contributors":[],"silentsave":false,"ts":1369162725314,"patch":[[{"diffs":[[0,"ire('../"],[-1,"model"],[1,"schemas"],[0,"/user');"]],"start1":193,"start2":193,"length1":21,"length2":23},{"diffs":[[0,"ire('../"],[-1,"model"],[1,"schemas"],[0,"/product"]],"start1":235,"start2":235,"length1":21,"length2":23},{"diffs":[[0,"ire(\"../"],[-1,"model"],[1,"schemas"],[0,"/categor"]],"start1":281,"start2":281,"length1":21,"length2":23}]],"length":3622,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369220042241,"patch":[[{"diffs":[[0,"name },\n"],[1,"            address : { address1: userInfo.address1, address2: userInfo.address2, town: userInfo.town, province: userInfo.province, country: userInfo.country}\n            contactno : userInfo.contactno,\n"],[0,"        "]],"start1":3208,"start2":3208,"length1":16,"length2":219}]],"length":3825,"saved":false}
{"ts":1369220055932,"patch":[[{"diffs":[[0,"country}"],[1,","],[0,"\n       "]],"start1":3366,"start2":3366,"length1":16,"length2":17}]],"length":3826,"saved":false}
{"ts":1369220109214,"patch":[[{"diffs":[[0,"nce,"],[1," pcd: userInfo.pcd,"],[0," country"],[1," "],[0,": us"]],"start1":3343,"start2":3343,"length1":16,"length2":36}]],"length":3846,"saved":false}
